#!/bin/sh

fixfile () {
  file=$1

  [ -f "$file" ] && chown leela:leela "$file"
  return 0
}

fixpipe () {
  pipefile=$1

  [ -p "$pipefile" ] || mkfifo "$pipefile"
  chown leela:leela "$pipefile"
}

repeat () {
  n=$1
  c=$2
  shift 1
  while [ $n -gt 0 ]
  do
    $c $n
    n=$(expr $n - 1)
  done
}

nagios_critical () {
  echo "$1"
  exit 2
}

nagios_ok () {
  echo "$1"
  exit 0
}

leela_check_pid () {
  test -f "$1"
}

leela_check_inet () {
  pid=$1
  addr=$2
  lsof -t -a -i4 -i$addr -p $pid
}

leela_check_file () {
  pid=$1
  file=$2
  lsof -t -a -p $pid $file
}

leela_check_xsock () {
  pid=$1
  file=$2
  lsof -U -t -a -p $pid $file
}

leela_read_udp_broadcast () {
  cat <<EOF | python -
from leela.server import config

def write(s):
  print(s.strip())

broadcast = config.read_config().get("udp", "broadcast")
map(lambda g: map(write, g.split(";")), broadcast.split(","))
EOF
}

leela_read_http_broadcast () {
  cat <<EOF | python -
from leela.server import config

def write(s):
  print(s.strip())

broadcast = config.read_config().get("http", "broadcast")
map(lambda g: map(write, g.split(";")), broadcast.split(","))
EOF
}

leela_read_udp_port () {
  cat <<EOF | python -
from leela.server import config

print(config.read_config().get("udp", "port"))
EOF
}

leela_read_http_port () {
  cat <<EOF | python -
from leela.server import config

print(config.read_config().get("http", "port"))
EOF
}

leela_read_redis_port () {
  cat <<EOF | python -
from leela.server import config

print(config.read_config().get("redis", "port"))
EOF
}
